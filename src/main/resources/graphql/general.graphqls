extend type Query {

    #
    # Authenticated
    #

    """
    Gets all the [DayData] that a user has
    """
    dayDatas: [DayData!]!

    """
    Gets the day data for the given date if it exists
    """
    dayData(date: Date!): DayData

}

extend type Mutation {

    #
    # Authenticated
    #

    """
    Will create the day data for the given date.
    The provided date cannot lie in the future.
    """
    createDayData(date: Date!): DayData

    """
    Will delete the day data for the given date.
    """
    deleteDayData(date: Date!): DayData

}

"""
A user that was created
"""
type User {
    id: Long!

    email: String!

    nameInfo: NameInfo!

    persons: [Person!]!
    personRelations: [PersonRelation!]!
    dayData: [DayData!]!
}


"""
A day of data for a specific user
"""
type DayData {
    id: Long!
    date: Date! #LocalDate (day-month-year)

    moodData: MoodData
    sleepData: SleepData
    dreamData: DreamData
    diaryData: DiaryData

    user: User
}

"""
Stores information about the naming preference of a user
"""
type NameInfo {
    id: Long!

    firstName: String!

    middleName: String
    lastName: String
    title: String
}