"""
Input that bundles the data needed to create a mood data
"""
input MoodDataInput {

    mood: Float

    moodMorning: Float
    moodNoon: Float
    moodEvening: Float

    date: Date!

    created: Instant!
    updated: Instant!
}

extend type Mutation {

    #
    # Authenticated
    #

    """
    Will add the mood data from the given input.
    The given MoodDataInput must conform to either of the two mood types.
    """
    addMoodData(moodDataInput: MoodDataInput): MoodData

    """
    Will delete the mood data from the date.
    """
    deleteMoodData(date: Date!): MoodData

}

extend type Query {

    """
    Gets the mood data for the given day, or null
    """
    getMoodData(date: Date!): MoodData

    """
    Gets all the mood datas, or an empty list
    """
    getAllMoodData: [MoodData!]

}


"""
Base for all mood data types
"""
type MoodData {
    id: Long!

    mood: Float

    moodMorning: Float
    moodNoon: Float
    moodEvening: Float

    date: Date!

    created: Instant!
    updated: Instant!
}